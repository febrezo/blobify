/*
* Copyright (c) 2020 Félix Brezo (https://felixbrezo.com)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License as published by the Free Software Foundation; either
* version 2 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA
*
* Authored by: Félix Breo <felixbrezo@disroot.orgm>
*/

namespace AppWidgets {
    public class SettingsMenu : Gtk.Popover {

        // Methods
        // =======
        construct {
            // Load Gtk settings
            // -----------------
            var gtk_settings = Gtk.Settings.get_default ();

            // Load menu elements
            // ------------------

            // Define the theme switch
            var mode_label = new Gtk.Label ("Theme");

            var mode_switch = new Granite.ModeSwitch.from_icon_name (
                "display-brightness-symbolic",
                "weather-clear-night-symbolic"
            );
            mode_switch.primary_icon_tooltip_text = "Light background";
            mode_switch.secondary_icon_tooltip_text = "Dark background";
            mode_switch.bind_property (
                "active",
                gtk_settings,
                "gtk-application-prefer-dark-theme",
                GLib.BindingFlags.BIDIRECTIONAL
            );

            // Define the Help dialog
            var support_label = new Gtk.Label ("What is a 'data' URI scheme?");
            var support_menu_item = new Gtk.ModelButton ();
            support_menu_item.get_child ().destroy (); // Needed to delete autogenerated things
            support_menu_item.add (support_label);
            support_menu_item.clicked.connect (on_help_clicked);

            // Prepare the popover menu grid
            // -----------------------------

            // Build the Vertical Box
            var menu_box = new Gtk.Grid ();
            menu_box.margin_top = 12;
            menu_box.margin_bottom = 12;
            menu_box.column_spacing = 10;
            menu_box.row_spacing = 10;
            menu_box.attach (mode_label, 0, 0);
            menu_box.attach (mode_switch, 1, 0);
            menu_box.attach (new Gtk.Separator(Gtk.Orientation.HORIZONTAL), 0, 2, 2);
            menu_box.attach (support_menu_item, 0, 3, 2);

            // Pack it
            this.add(menu_box);
            this.set_position (Gtk.PositionType.BOTTOM);
        }

        // Events
        // ======
        private void on_help_clicked () {
            try {
                AppInfo.launch_default_for_uri ("https://en.wikipedia.org/wiki/Data_URI_scheme", null);
            } catch (Error e) {
                warning (e.message);
            }
        }
    }
}

